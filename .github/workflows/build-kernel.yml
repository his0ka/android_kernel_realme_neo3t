name: Build Kernel
on:
  schedule:
    - cron:  '0 4 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Kuala_Lumpur date "+%Y %m %d %H,%M")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install libarchive-tools git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    - name: Download Neutron-Clang
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang && cd clang
        bash <(curl -s "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman") -S=16012023
        bash <(curl -s "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman") --patch=glibc
        
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/his0ka/android_kernel_realme_neo3t.git -b rui-ngl android-kernel --depth=1
        cd android-kernel
        git clone https://github.com/josenk/srandom --depth=1

    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

    - name: Setup Configuration for Kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        echo "CONFIG_KPROBES=y" >> arch/arm64/configs/vendor/sm8250_defconfig
        echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/vendor/sm8250_defconfig

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-${{ env.UPLOADNAME }}
        max-size: 2G

    - name: Build kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang/bin:$PATH
        make -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- CC=clang O=out ARCH=arm64 NM=llvm-nm OBJDUMP=llvm-objdump STRIP=llvm-strip LLVM_IAS=1 vendor/sm8250_defconfig
        make -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" O=out ARCH=arm64 NM=llvm-nm OBJDUMP=llvm-objdump STRIP=llvm-strip LLVM_IAS=1

    - name: Upload Image
      uses: actions/upload-artifact@v3
      with:
        name: Image-KernelSU-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload DTBO
      uses: actions/upload-artifact@v3
      with:
        name: DTBO-KernelSU-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/dtbo.img

    - name: Unzip AnyKernel3
      run: |
        unzip $GITHUB_WORKSPACE/kernel_workspace/android-kernel/out/ngl.zip -d $GITHUB_WORKSPACE/kernel_workspace/android-kernel/out/ngl

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v3
      with:
        name: AnyKernel3-dragon-KernelSU-${{ env.BUILD_TIME }}
        path: kernel_workspace/android-kernel/out/ngl/*
